---

- name: deploy domain controller
  hosts: 192.168.50.3

  tasks:

    - name: install features
      win_feature:
        name:
          - ad-domain-services
          - dns
          - rsat
          - gpmc
        state: present
      register: features

    - name: prevent nat ip from getting registerd in DNS
      win_shell: Set-DNSClient -RegisterThisConnectionsAddress:$false -InterfaceAlias Ethernet
      args:
        executable: powershell
      when: features.changed

    - name: set dns on ethernet
      win_dns_client:
        adapter_names: "{{item}}"
        ipv4_addresses:
          - 192.168.50.2
          - "{{ansible_ip_addresses[2]}}"
          - 127.0.0.1
      with_items:
        - ethernet
        - ethernet 2

    - name: join domain
      win_domain_membership:
        hostname: dc2
        dns_domain_name: ad.skoopycorp.com
        domain_admin_user: administrator@ad.skoopycorp.com
        domain_admin_password: vagrant
        state: domain
      register: domain_member

    - name: reboot
      win_reboot:
        reboot_timeout: "{{reboot_timeout}}"
      when: domain_member.changed

    - name: become domain controller
      win_domain_controller:
        dns_domain_name: ad.skoopycorp.com
        domain_admin_user: administrator@ad.skoopycorp.com
        domain_admin_password: vagrant
        safe_mode_password: What a password!
        state: domain_controller
      register: domain_con

    - name: final reboot
      win_reboot:
        reboot_timeout: "{{reboot_timeout}}"
      when: domain_con.changed

    - pause:
        minutes: 6
      when: domain_con.changed

    - name: remove nat ip from breaking GC and DC communication
      win_shell: get-dnsserverresourcerecord -zonename {{item}} | where {$_.recorddata.ipv4address.ipaddresstostring -match "10."} | remove-dnsserverresourcerecord -zonename {{item}} 
      args:
        executable: powershell
      loop:
        - "_mscdcs.ad.skoopycorp.com"
        - "ad.skoopycorp.com"
      when: domain_con.changed

    - name: add wsman service principal to dc2
      win_shell: Set-ADComputer dc2 -ServicePrincipalNames @{Add="{{item}}"}
      args:
        executable: powershell
      when: domain_con.changed
      with_items:
        - WSMAN/DC2
        - WSMAN/dc2.ad.skoopycorp.com
